[versions]
agp = "8.9.3"
ksp = "2.1.21-2.0.1"
kotlin = "2.1.21"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activityCompose = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-constraintlayout = "2.2.1"
androidx-core-ktx = "1.16.0"
androidx-espresso-core = "3.6.1"
androidx-lifecycle = "2.8.4"
material3 = "1.3.2"
androidx-test-junit = "1.2.1"
compose-multiplatform = "1.8.1"
compose-adaptive = "1.0.1"
composeViewModel = "2.9.1"
compose = "1.8.3"
junit = "4.13.2"
koin = "4.0.1"
napier = "2.6.1"
koin-compose = "4.0.1"
androidx-lifecycle-runtime-ktx = "2.9.1"
decomposeVer = "3.3.0"
decompose-jetbrains = "2.2.3"
ktor = "3.0.3"
kotlinx-coroutines = "1.9.0"
landScapist = "2.4.4"
kmpNativeCoroutines = "1.0.0-ALPHA-38"
composeNavigation = "2.9.0"
serialization = "1.7.3"
coil = "3.2.0"
roomVer = "2.7.2"
sqlLite = "2.5.2"
mockk = "1.13.10"
turbine = "1.1.0"
truthVer = "1.4.4"

[libraries]
androidx-core-ktx = { group = "androidx.core", name = "core-ktx", version.ref = "androidx-core-ktx" }
androidx-lifecycle-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtime-compose = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "androidx-appcompat" }
androidx-material = { group = "androidx.compose.material3", name = "material3", version.ref = "material3" }
androidx-compose-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "composeViewModel" }
androidx-compose-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "composeViewModel" }
androidx-constraintlayout = { group = "androidx.constraintlayout", name = "constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-compose-materialWindow = { module = "androidx.compose.material3:material3-window-size-class" }

# Jetpack Compose Essentials
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle-runtime-ktx" }

# Decompose
decompose = { group = "com.arkivanov.decompose", name = "decompose", version.ref = "decomposeVer" }
#decompose-jetbrains = { group = "com.arkivanov.decompose", name = "extensions-compose-jetbrains", version.ref = "decompose-jetbrains" }
decompose-ext-compose = { group = "com.arkivanov.decompose", name = "extensions-compose", version.ref = "decomposeVer" }
decompose-ext-android = { group = "com.arkivanov.decompose", name = "extensions-compose-android", version.ref = "decomposeVer" }

# Local DB
room-runtime = { module = "androidx.room:room-runtime", version.ref = "roomVer" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "roomVer" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "roomVer" }
sqllite-bundle = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlLite" }

# Serialization
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }

# Fetch Image
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

# Testing
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { group = "junit", name = "junit", version.ref = "junit" }
androidx-test-junit = { group = "androidx.test.ext", name = "junit", version.ref = "androidx-test-junit" }
androidx-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "androidx-espresso-core" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
truth = { group = "com.google.truth", name = "truth", version.ref = "truthVer" }


koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin_android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koin" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }
koin-composeVM = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koin-compose" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-content = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-test = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor"}

logging-napier = { module = "io.github.aakira:napier", version.ref = "napier" }


landscapist-coil = { module = "com.github.skydoves:landscapist-coil3", version.ref = "landScapist" }
landscapist-animation = { module = "com.github.skydoves:landscapist-animation", version.ref = "landScapist" }

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
androidx-room = { id = "androidx.room", version.ref = "roomVer" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "compose-multiplatform" }
composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kmpNativeCoroutines = { id = "com.rickclephas.kmp.nativecoroutines", version.ref = "kmpNativeCoroutines" }